# yaml-language-server: $schema=./values.schema.json

global:
  domain: c-50942a7.stage.kyma.ondemand.com
  imagePullSecret:
    name: docker-registry
  image:
    registry: docker.io/abhishekbantiya
    tag: v1
srv:
  bindings:
    auth:
      serviceInstanceName: xsuaa
    db:
      serviceInstanceName: hana
    destination:
      serviceInstanceName: destination
  image:
    repository: bookshop-gha-srv
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
xsuaa:
  serviceOfferingName: xsuaa
  servicePlanName: application
  parameters:
    tenant-mode: dedicated
    oauth2-configuration:
      redirect-uris:
        - https://*.{{ tpl .Values.global.domain . }}/**
    xsappname: bookshop-gha-{{ .Release.Namespace }}
hana-deployer:
  image:
    repository: bookshop-gha-hana-deployer
  bindings:
    hana:
      serviceInstanceName: hana
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
hana:
  serviceOfferingName: hana
  servicePlanName: hdi-shared
destination:
  serviceOfferingName: destination
  servicePlanName: lite
  parameters:
    version: 1.0.0
    HTML5Runtime_enabled: true
html5-apps-repo-host:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-host
html5-apps-deployer:
  env:
    SAP_CLOUD_SERVICE: bookshopgha.service
  image:
    repository: bookshop-gha-html5-deployer
  bindings:
    content-agent-service:
      serviceInstanceName: content-agent-service
    xsuaa:
      serviceInstanceName: xsuaa
    destination:
      serviceInstanceName: destination
    html5-apps-repo:
      serviceInstanceName: html5-apps-repo-host
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-html5-apps-deployer-configmap"
backendDestinations:
  srv-api:
    service: srv
content-agent-service:
  serviceOfferingName: content-agent
  servicePlanName: application